suppressPackageStartupMessages({
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(EnrichmentBrowser)
library(wordcloud)
library(ztable)
library(ComplexHeatmap)
library(metafolio)
})
install.packages('GenomicSuperSignature')
suppressPackageStartupMessages({
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(EnrichmentBrowser)
library(wordcloud)
library(ztable)
library(ComplexHeatmap)
library(metafolio)
})
BiocManager::install(version = "3.18")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
install.packages('GenomicSuperSignature')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GenomicSuperSignature")
suppressPackageStartupMessages({
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(EnrichmentBrowser)
library(wordcloud)
library(ztable)
library(ComplexHeatmap)
library(metafolio)
})
install.packages('curatedTCGAData')
BiocManager::install('curatedTCGAData')
suppressPackageStartupMessages({
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(EnrichmentBrowser)
library(wordcloud)
library(ztable)
library(ComplexHeatmap)
library(metafolio)
})
BiocManager::install('TCGAutils')
suppressPackageStartupMessages({
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(EnrichmentBrowser)
library(wordcloud)
library(ztable)
library(ComplexHeatmap)
library(metafolio)
})
install.packages('magick')
suppressPackageStartupMessages({
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(EnrichmentBrowser)
library(wordcloud)
library(ztable)
library(ComplexHeatmap)
library(metafolio)
})
install.packages('EnrichmentBrowser')
BiocManager::install('EnrichmentBrowser')
suppressPackageStartupMessages({
# BiocManager
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(EnrichmentBrowser)
# CRAN
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(wordcloud)
library(ztable)
library(ComplexHeatmap)
library(metafolio)
})
install.packages('wordcloud')
suppressPackageStartupMessages({
# BiocManager
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(EnrichmentBrowser)
# CRAN
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(wordcloud)
library(ztable)
library(ComplexHeatmap)
library(metafolio)
})
install.packages('ztable')
install.packages('ComplexHeatmap')
install.packages("ComplexHeatmap")
BiocManager::install('ComplexHeatmap')
BiocManager::install('ComplexHeatmap')
install.packages('ComplexHeat
suppressPackageStartupMessages({
# BiocManager
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(EnrichmentBrowser)
library(ComplexHeatmap)
# CRAN
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(wordcloud)
library(ztable)
library(metafolio)
})
library(ComplexHeatmap)
suppressPackageStartupMessages({
# BiocManager
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(EnrichmentBrowser)
library(ComplexHeatmap)
# CRAN
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(wordcloud)
library(ztable)
library(metafolio)
})
install.packages('metafolio')
suppressPackageStartupMessages({
# BiocManager
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(EnrichmentBrowser)
library(ComplexHeatmap)
# CRAN
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(wordcloud)
library(ztable)
library(metafolio)
})
BiocManager::install('curatedOvarianData')
library(curatedOvarianData)
x <- as(TCGA.RNASeqV2_eset, "SummarizedExperiment")
data(TCGA.RNASeqV2_eset)
x <- as(TCGA.RNASeqV2_eset, "SummarizedExperiment")
View(TCGA.RNASeqV2_eset)
View(x)
View(x)
rs <- rowSums(assay(x) > 2)
keep <-  rs >= ncol(x) / 2
tcga_ovc <- x[keep,]
TCGA_validationDatasets[["OV"]] <- tcga_ovc
data_dir <- "~/Documents/GitHub/GSS-Britney/data"
## Raw read counts from GSE62944 from ExperimentHub
tcga <- GSEABenchmarkeR::loadEData("tcga", cache = FALSE, paired = FALSE, map2entrez = FALSE)
library(GSEABase)
data_dir <- "~/Documents/GitHub/GSS-Britney/data"
## Raw read counts from GSE62944 from ExperimentHub
tcga <- GSEABenchmarkeR::loadEData("tcga", cache = FALSE, paired = FALSE, map2entrez = FALSE)
library(GSEABenchmarkeR)
detach("package:GSEABase", unload = TRUE)
BiocManager::install('GSEABenchmarkeR')
library(GSEABenchmarkeR)
data_dir <- "~/Documents/GitHub/GSS-Britney/data"
## Raw read counts from GSE62944 from ExperimentHub
tcga <- GSEABenchmarkeR::loadEData("tcga", cache = FALSE, paired = FALSE, map2entrez = FALSE)
data_dir <- "~/Documents/GitHub/GSS-Britney/data"
## Raw read counts from GSE62944 from ExperimentHub
tcga <- GSEABenchmarkeR::loadEData("tcga", cache = FALSE, paired = FALSE, map2entrez = FALSE)
## log2 transformation
assay(tcga$COAD) <- log2(assay(tcga$COAD) + 1)
assay(tcga$HNSC) <- log2(assay(tcga$HNSC) + 1)
TCGA_validationDatasets <- vector(mode = "list", length = 2)
names(TCGA_validationDatasets) <- c("COAD", "HNSC")
TCGA_validationDatasets[[1]] <- tcga$COAD
TCGA_validationDatasets[[2]] <- tcga$HNSC
## TCGA-OVC dataset from curatedOvarianData
BiocManager::install('curatedOvarianData')
library(curatedOvarianData)
data(TCGA.RNASeqV2_eset)
x <- as(TCGA.RNASeqV2_eset, "SummarizedExperiment")
rs <- rowSums(assay(x) > 2)
keep <-  rs >= ncol(x) / 2
tcga_ovc <- x[keep,]
TCGA_validationDatasets[["OV"]] <- tcga_ovc
save(TCGA_validationDatasets, file = file.path(data_dir, "TCGA_validationDatasets.rda"))
load('~/Documents/GitHub/GSS-Britney/data/TCGA_validationDatasets.rda')
datasets <- TCGA_validationDatasets
View(datasets)
coad <- curatedTCGAData(diseaseCode = 'COAD',
assays = 'RNA*',
version = '2.0.1',
dry.run = FALSE)
coad <- curatedTCGAData(diseaseCode = 'COAD',
assays = 'RNA*',
version = '2.0.1',
dry.run = FALSE)
coad_rna <- getWithColData(coad,
'COAD-RNASeq2Gene-20160128',
mode = 'append')
coad <- curatedTCGAData(diseaseCode = 'COAD',
assays = 'RNA*',
version = '2.0.1',
dry.run = FALSE)
View(coad)
View(coad)
coad_rna <- getWithColData(coad,
'COAD-RNASeq2Gene-20160128',
mode = 'append')
coad <- curatedTCGAData(diseaseCode = 'COAD',
assays = 'RNA*',
version = '2.0.1',
dry.run = FALSE)
coad_rna <- getWithColData(coad,
"COAD-RNASeq2Gene-20160128",
mode = 'append')
coad_rna <- getWithColData(coad,
"COAD-RNASeq2Gene-20160128",
mode = "append")
View(coad)
coad_rna <- getWithColData(coad,
"COAD-RNASeqGene-20160128",
mode = "append")
coad_rna <- getWithColData(coad,
'COAD_RNASeq2Gene-20160128',
mode = 'append')
coad_meta <- colData(coad_rna)
View(coad_rna)
validate_coad <- validate(datasets$COAD, RAVmodel)
View(datasets)
validate_coad <- validate(datasets$COAD, RAVmodel)
View(datasets)
load('~/Documents/GitHub/GSS-Britney/data/TCGA_validationDatasets.rda')
datasets <- TCGA_validationDatasets[1:3]
validate_coad <- validate(datasets$COAD, RAVmodel)
datasets$COAD
validate_coad <- validate(datasets$COAD, RAVmodel)
suppressPackageStartupMessages({
# BiocManager
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(ComplexHeatmap)
# CRAN
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(wordcloud)
library(ztable)
library(metafolio)
})
# data_dir <- "~/Documents/GitHub/GSS-Britney/data"
#
# ## Raw read counts from GSE62944 from ExperimentHub
# tcga <- GSEABenchmarkeR::loadEData("tcga", cache = FALSE, paired = FALSE, map2entrez = FALSE)
#
# ## log2 transformation
# assay(tcga$COAD) <- log2(assay(tcga$COAD) + 1)
# assay(tcga$HNSC) <- log2(assay(tcga$HNSC) + 1)
#
# TCGA_validationDatasets <- vector(mode = "list", length = 2)
# names(TCGA_validationDatasets) <- c("COAD", "HNSC")
# TCGA_validationDatasets[[1]] <- tcga$COAD
# TCGA_validationDatasets[[2]] <- tcga$HNSC
#
# ## TCGA-OVC dataset from curatedOvarianData
# BiocManager::install('curatedOvarianData')
# library(curatedOvarianData)
# data(TCGA.RNASeqV2_eset)
# x <- as(TCGA.RNASeqV2_eset, "SummarizedExperiment")
#
# rs <- rowSums(assay(x) > 2)
# keep <-  rs >= ncol(x) / 2
# tcga_ovc <- x[keep,]
# TCGA_validationDatasets[["OV"]] <- tcga_ovc
#
# save(TCGA_validationDatasets, file = file.path(data_dir, "TCGA_validationDatasets.rda"))
load('~/Documents/GitHub/GSS-Britney/data/TCGA_validationDatasets.rda')
datasets <- TCGA_validationDatasets[1:3]
RAVmodel <- getModel('C2', load=TRUE)
coad <- curatedTCGAData(diseaseCode = 'COAD',
assays = 'RNA*',
version = '2.0.1',
dry.run = FALSE)
coad_rna <- getWithColData(coad,
'COAD_RNASeq2Gene-20160128',
mode = 'append')
coad_meta <- colData(coad_rna)
validate_coad <- validate(datasets$COAD, RAVmodel)
heatmapTable(validate_coad)
View(RAVmodel)
validate_coad <- validate(datasets$HNSC, RAVmodel)
validate_coad <- validate(datasets[['COAD']], RAVmodel)
validate_coad <- validate(datasets[['COAD']], RAVmodel)
heatmapTable(validate_coad)
validate_coad <- validate(datasets[['COAD']], RAVmodel)
heatmapTable(validate_coad)
heatmapTable(validate_coad, RAVmodel)
validate_coad <- validate(datasets[['COAD']], RAVmodel)
heatmapTable(validate_coad, RAVmodel)
validate_coad_meta <- validate(coad_meta, RAVmodel)
validate_coad <- validate(datasets[['COAD']], RAVmodel)
heatmapTable(validate_coad, RAVmodel)
validate_coad_meta <- validate(coad_meta, RAVmodel)
validate_coad_meta <- validate(coad_rna, RAVmodel)
heatmapTable(validate_coad_rna, RAVmodel)
validate_coad_rna <- validate(coad_rna, RAVmodel)
heatmapTable(validate_coad_rna, RAVmodel)
View(tcga)
assay(coad_rna_1) <- log2(assay(coad_rna) + 1)
assay(coad_rna) <- log2(assay(coad_rna) + 1)
View(coad_rna)
validate_coad_rna <- validate(coad_rna, RAVmodel)
heatmapTable(validate_coad_rna, RAVmodel)
sparsity_summary <- table(colSums(is.na(coad_meta)))
sparsity_summary
plot(stack(sparsity_summary)$ind,
stack(sparsity_summary)$values)
# Select columns with >10% completeness
keep_attribute_ind <- which(colSums(!is.na(coad_meta)) > round(nrow(coad_meta)/10))
meta_sub1 <- coad_meta[keep_attribute_ind]
meta_sub1 <- subset(meta_sub1, select= -patientID)
unique(sapply(coad_meta@listData, type))
charcTb <- meta_sub1[, sapply(meta_sub1, class) == 'character']
View(charcTb)
# Select columns with >10% completeness
keep_attribute_ind <- which(colSums(!is.na(coad_meta)) > round(nrow(coad_meta)/10))
meta_sub <- coad_meta[keep_attribute_ind]
meta_sub <- subset(meta_sub1, select= -patientID)
suppressPackageStartupMessages({
# BiocManager
library(GenomicSuperSignature)
library(curatedTCGAData)
library(MultiAssayExperiment)
library(TCGAutils)
library(ComplexHeatmap)
# CRAN
library(tidyverse) # includes dplyr, ggplot2, magrittr, tidyr
library(magick)
library(wordcloud)
library(ztable)
library(metafolio)
})
# data_dir <- "~/Documents/GitHub/GSS-Britney/data"
#
# ## Raw read counts from GSE62944 from ExperimentHub
# tcga <- GSEABenchmarkeR::loadEData("tcga", cache = FALSE, paired = FALSE, map2entrez = FALSE)
#
# ## log2 transformation
# assay(tcga$COAD) <- log2(assay(tcga$COAD) + 1)
# assay(tcga$HNSC) <- log2(assay(tcga$HNSC) + 1)
#
# TCGA_validationDatasets <- vector(mode = "list", length = 2)
# names(TCGA_validationDatasets) <- c("COAD", "HNSC")
# TCGA_validationDatasets[[1]] <- tcga$COAD
# TCGA_validationDatasets[[2]] <- tcga$HNSC
#
# ## TCGA-OVC dataset from curatedOvarianData
# BiocManager::install('curatedOvarianData')
# library(curatedOvarianData)
# data(TCGA.RNASeqV2_eset)
# x <- as(TCGA.RNASeqV2_eset, "SummarizedExperiment")
#
# rs <- rowSums(assay(x) > 2)
# keep <-  rs >= ncol(x) / 2
# tcga_ovc <- x[keep,]
# TCGA_validationDatasets[["OV"]] <- tcga_ovc
#
# save(TCGA_validationDatasets, file = file.path(data_dir, "TCGA_validationDatasets.rda"))
load('~/Documents/GitHub/GSS-Britney/data/TCGA_validationDatasets.rda')
datasets <- TCGA_validationDatasets[1:3]
RAVmodel <- getModel('C2', load=TRUE)
coad <- curatedTCGAData(diseaseCode = 'COAD',
assays = 'RNA*',
version = '2.0.1',
dry.run = FALSE)
coad_rna <- getWithColData(coad,
'COAD_RNASeq2Gene-20160128',
mode = 'append')
coad_meta <- colData(coad_rna)
validate_coad <- validate(datasets[['COAD']], RAVmodel)
heatmapTable(validate_coad, RAVmodel)
assay(coad_rna) <- log2(assay(coad_rna) + 1)
validate_coad_rna <- validate(coad_rna, RAVmodel)
heatmapTable(validate_coad_rna, RAVmodel)
sparsity_summary <- table(colSums(is.na(coad_meta)))
sparsity_summary
plot(stack(sparsity_summary)$ind,
stack(sparsity_summary)$values)
# Select columns with >10% completeness
keep_attribute_ind <- which(colSums(!is.na(coad_meta)) > round(nrow(coad_meta)/10))
meta_sub <- coad_meta[keep_attribute_ind]
meta_sub <- subset(meta_sub1, select= -patientID)
# Select columns with >10% completeness
keep_attribute_ind <- which(colSums(!is.na(coad_meta)) > round(nrow(coad_meta)/10))
meta_sub <- coad_meta[keep_attribute_ind]
meta_sub <- subset(meta_sub, select= -patientID)
# Check for data types in listData
unique(sapply(coad_meta@listData, type))
charcTb <- meta_sub[, sapply(meta_sub, class) == 'character']
numTb <- meta_sub[, sapply(meta_sub, class) %in% c('numeric', 'integer')]
# Calculate validation scores
sampleScore <- calculateScore(coad_rna, RAVmodel)
validatedSignatures(validated_coad_rna, num.out = 100, RAVmodel, indexOnly = TRUE)
assay(coad_rna) <- log2(assay(coad_rna) + 1)
validate_coad_rna <- validate(coad_rna, RAVmodel)
heatmapTable(validate_coad_rna, RAVmodel)
validatedSignatures(validate_coad_rna, num.out = 100, RAVmodel, indexOnly = TRUE)
validatedSignatures(validate_coad_rna, num.out = 100, RAVmodel, swCutoff = 0.5, indexOnly = TRUE)
validatedSignatures(validate_coad_rna, num.out = 100, RAVmodel, swCutoff = 0.4, indexOnly = TRUE)
validatedSignatures(validate_coad_rna, num.out = 100, RAVmodel, swCutoff = 0.2, indexOnly = TRUE)
validatedSignatures(validate_coad_rna, num.out = 100, RAVmodel, swCutoff = 0.7, indexOnly = TRUE)
validatedSignatures(validate_coad_rna, RAVmodel, swCutoff = 0.7, indexOnly = TRUE)
validatedSignatures(validate_coad_rna, RAVmodel, swCutoff = 0.5, indexOnly = TRUE)
validatedSignatures(validate_coad_rna, num.out = 30, RAVmodel, swCutoff = 0.5, indexOnly = TRUE)
validated_ind <- validatedSignatures(validate_coad_rna, num.out = 30, RAVmodel, swCutoff = 0.5, indexOnly = TRUE)
# Subset sampleScore to join with MCPcounter
sampleScore_sub <- sampleScore[, validated_ind] %>% as.data.frame()
View(sampleScore_sub)
# Calculate r-squared for numeric attributes
rsq_numAttr <- as.data.frame(matrix(nrow = ncol(numTb),
ncol = ncol(sampleScore_sub)))
colnames(rsq_numAttr) <- colnames(sampleScore_sub)
rownames(rsq_numAttr) <- colnames(numTb)
for (i in seq_len(ncol(numTb))) {
for (j in seq_len(ncol(sampleScore_sub))) {
rsq <- calculateRsq(numTb[, i], sampleScore_sub[, j])
rsq_numAttr[i, j] <- rsq
}
}
# R squared value function
calculateRsq <- function (x, y) stats::cor(x, y, use = 'na.or.complete') ^ 2
# Calculate r-squared for numeric attributes
rsq_numAttr <- as.data.frame(matrix(nrow = ncol(numTb),
ncol = ncol(sampleScore_sub)))
colnames(rsq_numAttr) <- colnames(sampleScore_sub)
rownames(rsq_numAttr) <- colnames(numTb)
for (i in seq_len(ncol(numTb))) {
for (j in seq_len(ncol(sampleScore_sub))) {
rsq <- calculateRsq(numTb[, i], sampleScore_sub[, j])
rsq_numAttr[i, j] <- rsq
}
}
View(rsq_numAttr)
# Calculate r-squared for numeric attributes
rsq_numAttr <- as.data.frame(matrix(nrow = ncol(numTb),
ncol = ncol(sampleScore_sub)))
colnames(rsq_numAttr) <- colnames(sampleScore_sub)
rownames(rsq_numAttr) <- colnames(numTb)
for (i in seq_len(ncol(numTb))) {
for (j in seq_len(ncol(sampleScore_sub))) {
rsq <- calculateRsq(numTb[, i], sampleScore_sub[, j])
rsq_numAttr[i, j] <- rsq
}
}
rsq_numAttr <- na.omit(rsq_numAttr)
View(rsq_numAttr)
max_rav <- apply(rsq_numAttr, 1, max)
max_attr <- which(max_rav > 0.4)
max_rav[max_attr]
rsq_numAttr_no_batch <- rsq_numAttr[-batch_ind,]
batch_ind <- grep('analyte|portion|procurement|aliquot|uuid|barcode',
rownames(rsq_numAttr))
rsq_numAttr_no_batch <- rsq_numAttr[-batch_ind,]
View(rsq_numAttr_no_batch)
max_rav <- apply(rsq_numAttr_no_batch, 1, max)
max_attr <- which(max_rav > 0.4)
max_rav[max_attr]
max_rav <- apply(rsq_numAttr_no_batch, 1, max)
heatmap(as.matrix(rsq_numAttr))
heatmap(as.matrix(rsq_numAttr_no_batch))
View(rsq_numAttr)
